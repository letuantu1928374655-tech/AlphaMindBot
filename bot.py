import logging
import os
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from dotenv import load_dotenv  # ƒê·ªçc bi·∫øn m√¥i tr∆∞·ªùng

# Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env
load_dotenv()
TOKEN = os.getenv("TELEGRAM_TOKEN")

# B·∫≠t log (ƒë·ªÉ ki·ªÉm so√°t l·ªói)
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

# L·ªánh /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Xin ch√†o Boss üê∫, AlphaMind Bot ƒë√£ s·∫µn s√†ng ph·ª•c v·ª•!")

# L·ªánh /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("C√°c l·ªánh hi·ªán c√≥:\n/start - Kh·ªüi ƒë·ªông bot\n/help - Xem tr·ª£ gi√∫p")

def main():
    # K·∫øt n·ªëi bot v·ªõi Telegram b·∫±ng token trong .env
    app = Application.builder().token(TOKEN).build()

    # Th√™m l·ªánh
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))

    # Ch·∫°y bot
    app.run_polling()

if __name__ == "__main__":
    main()
